=== Git V Bash-u

(((bash)))(((tab completion, bash)))(((shell prompts, bash)))
Če ste uporabnika Bash-a, lahko izkoristite nekaj lastnosti vaše lupine, da naredite vašo izkušnjo z Git-om veliko bolj prijazno.
Git dejansko prihaja z vtičniki za nekaj lupin, vendar privzeto niso vključeni.

Najprej potrebujete dobiti kopijo `contrib/completion/git-completion.bash` datoteke iz izvorne kode Git.
Kopirajte jo nekam priročno, kot je vaš domači direktorij in dodajte to v vaš ˙.bashrc`:

[source,console]
-----
. ~/git-completion.bash
-----

Ko ste enkrat opravili, spremenite vaš direktorij v git repozitorij in vpišite:

[source,console]
----
$ git chec<tab>
----

… in Bash bo avtomatsko zaključeval na `git checkout`.
To deluje z vsemi podukazi Git-a, parametri ukazne vrstice in daljavami ter t.i. ref imeni, kjer je ustrezno.

Uporabno je tudi prilagoditi vaš poziv ali terminal, da prikazuje informacije o trenutnem direktoriju Git.
To je lahko enostavno ali kompleksno kakor želite, vendar so v splošnem nekateri deli informacij, ki jih večina ljudi želi, kot je trenutna veja in status delovnega direktorija.
Da to dodate k vašemu pozivu, samo kopirajte `contrib/completion/git-prompt.sh` datoteko iz izvornega repozitorija Git v vaš domači direktorij in dodajte nekaj takega v vaš `.bashrc`:

[source,console]
-----
. ~/git-prompt.sh
export GIT_PS1_SHOWDIRTYSTATE=1
export PS1='\w$(__git_ps1 " (%s)")\$ '
-----

`\w` pomeni izpis trenutnega delovnega direktorija `\$` izpiše del `$` poziva in `__git_ps1 " (%s)"` pokliče funkcijo, ki je ponujena z `git-prompt.sh` z argumentom oblikovanja.
Sedaj bo vaš bash poziv izgledal kot to, ko ste kjerkoli znotraj Git-kontroliranega projekta:

.Customized `bash` prompt.
image::images/git-bash.png[Customized `bash` prompt.]

Obe teh skript prihajajo s pomagalno dokumentacijo; poglejte vsebino `git-completion.bash` in `git-prompt.sh` za več informacij.
